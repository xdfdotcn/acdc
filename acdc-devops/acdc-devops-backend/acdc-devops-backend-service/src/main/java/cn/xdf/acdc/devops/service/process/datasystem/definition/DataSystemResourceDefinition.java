package cn.xdf.acdc.devops.service.process.datasystem.definition;

import cn.xdf.acdc.devops.core.domain.entity.enumeration.DataSystemResourceType;
import lombok.Getter;
import lombok.Setter;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * Definition of a data system resource.
 */
@Getter
@Setter
public class DataSystemResourceDefinition {

    private Map<String, ConfigurationDefinition> configurationDefinitions;

    private DataSystemResourceType type;

    /**
     * If configured by the user or dynamic generated by the application when the resource is database or table.
     */
    private boolean isDynamic;

    private Map<DataSystemResourceType, DataSystemResourceDefinition> children = new HashMap<>();

    public DataSystemResourceDefinition() {

    }

    public DataSystemResourceDefinition(
            final Map<String, ConfigurationDefinition> configurationDefinitions,
            final DataSystemResourceType type) {
        this(configurationDefinitions, type, Collections.EMPTY_MAP);
    }

    public DataSystemResourceDefinition(
            final Map<String, ConfigurationDefinition> configurationDefinitions,
            final DataSystemResourceType type,
            final Map<DataSystemResourceType, DataSystemResourceDefinition> children) {
        this.configurationDefinitions = configurationDefinitions;
        this.type = type;

        if (Objects.nonNull(children)) {
            children.values().forEach(each -> this.children.put(each.getType(), each));
        }
    }
}
